//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/putPicture", ReplyAction="http://tempuri.org/IService1/putPictureResponse")]
        void putPicture(int id, string nazwa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/putPicture", ReplyAction="http://tempuri.org/IService1/putPictureResponse")]
        System.Threading.Tasks.Task putPictureAsync(int id, string nazwa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPicture", ReplyAction="http://tempuri.org/IService1/getPictureResponse")]
        System.IO.Stream getPicture(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPicture", ReplyAction="http://tempuri.org/IService1/getPictureResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> getPictureAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addFile", ReplyAction="http://tempuri.org/IService1/addFileResponse")]
        void addFile(System.IO.Stream picture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addFile", ReplyAction="http://tempuri.org/IService1/addFileResponse")]
        System.Threading.Tasks.Task addFileAsync(System.IO.Stream picture);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Client.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Client.ServiceReference2.IService1>, Client.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void putPicture(int id, string nazwa) {
            base.Channel.putPicture(id, nazwa);
        }
        
        public System.Threading.Tasks.Task putPictureAsync(int id, string nazwa) {
            return base.Channel.putPictureAsync(id, nazwa);
        }
        
        public System.IO.Stream getPicture(int id, string name) {
            return base.Channel.getPicture(id, name);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> getPictureAsync(int id, string name) {
            return base.Channel.getPictureAsync(id, name);
        }
        
        public void addFile(System.IO.Stream picture) {
            base.Channel.addFile(picture);
        }
        
        public System.Threading.Tasks.Task addFileAsync(System.IO.Stream picture) {
            return base.Channel.addFileAsync(picture);
        }
    }
}
